service: Stock-Increase-Lambda
frameworkVersion: '3'

plugins:
  - serverless-lift

# name 지정
custom:
  dynamodb:
    tableName3: rewardInfoTable #DB 리워드재고가 있는 테이블 이름
  lambda:
    functionName: Stock_Increase_Lambda  #Lambda 함수 이름
  sqs:
    queueName: Stock_Shortage_SQS  #Stock_Shortage_SQS 이름
  sns:
    topicName: Stock_Increase_SNS  #Stock_Increase_SNS 이름
  ses:
    email: heechanan22@gmail.com  #구독, 전송시킬 이메일 주소


# IAM 정책 생성
provider:
  name: aws
  region: ap-northeast-2
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${self:custom.dynamodb.tableName3}"
        - Effect: Allow
          Action:
            - sns:Publish
          Resource: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${self:custom.sns.topicName}"
        - Effect: Allow
          Action:
            - ses:SendEmail
          Resource: '*'
      
  # Lambda 내부 환경변수 설정
  environment:
    SNS_INCREASE_ARN: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${self:custom.sns.topicName}"

# Lambda 함수 생성
functions:
  myFunction:
    name: "${self:custom.lambda.functionName}"
    handler: index.handler
    events:
      - sqs:
          arn: !GetAtt myQueue.Arn

# SNS Topic, SQS Queue, SQS_dlq 생성
resources:
  Resources:
    myQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: !Sub "${self:custom.sqs.queueName}"
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt myDlq.Arn
          maxReceiveCount: 10
    myDlq:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: !Sub "${self:custom.sqs.queueName}_dlq"
    myTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: "${self:custom.sns.topicName}"
    myEmailSubscription:
      Type: "AWS::SNS::Subscription"
      DependsOn: myTopic # myTopic 생성이 완료된 후에 구독이 생성되도록 설정
      Properties:
        Protocol: "email"
        TopicArn: !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:${self:custom.sns.topicName}"
        Endpoint: "${self:custom.ses.email}"